# Generated by Django 5.2.6 on 2025-10-03 13:45

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('products', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products/gallery/', verbose_name='Image')),
                ('alt_text', models.CharField(blank=True, help_text='Alternative text for accessibility', max_length=200, verbose_name='Alt Text')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Sort Order')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Product Image',
                'verbose_name_plural': 'Product Images',
                'ordering': ['sort_order', 'created_at'],
            },
        ),
        migrations.AlterModelOptions(
            name='product',
            options={'ordering': ['-created_at'], 'verbose_name': 'Product', 'verbose_name_plural': 'Products'},
        ),
        migrations.RemoveField(
            model_name='product',
            name='image',
        ),
        migrations.AddField(
            model_name='product',
            name='allow_backorder',
            field=models.BooleanField(default=False, help_text='Allow orders when out of stock', verbose_name='Allow Backorder'),
        ),
        migrations.AddField(
            model_name='product',
            name='compare_at_price',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Original price for showing discounts', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Compare At Price'),
        ),
        migrations.AddField(
            model_name='product',
            name='cost_price',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Cost price for profit calculations (internal use)', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Cost Price'),
        ),
        migrations.AddField(
            model_name='product',
            name='description',
            field=models.TextField(blank=True, help_text='Detailed product description', verbose_name='Description'),
        ),
        migrations.AddField(
            model_name='product',
            name='dimensions_height',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Product height in centimeters', max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Height (cm)'),
        ),
        migrations.AddField(
            model_name='product',
            name='dimensions_length',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Product length in centimeters', max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Length (cm)'),
        ),
        migrations.AddField(
            model_name='product',
            name='dimensions_width',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Product width in centimeters', max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Width (cm)'),
        ),
        migrations.AddField(
            model_name='product',
            name='featured_image',
            field=models.ImageField(blank=True, help_text='Main product image', null=True, upload_to='products/', verbose_name='Featured Image'),
        ),
        migrations.AddField(
            model_name='product',
            name='image_url',
            field=models.URLField(blank=True, help_text='External image URL (fallback if no featured image)', null=True, verbose_name='Image URL'),
        ),
        migrations.AddField(
            model_name='product',
            name='is_digital',
            field=models.BooleanField(default=False, help_text='Whether this is a digital product (no shipping)', verbose_name='Digital Product'),
        ),
        migrations.AddField(
            model_name='product',
            name='is_featured',
            field=models.BooleanField(default=False, help_text='Mark as featured product', verbose_name='Featured'),
        ),
        migrations.AddField(
            model_name='product',
            name='low_stock_threshold',
            field=models.PositiveIntegerField(default=5, help_text='Alert when stock falls below this number', verbose_name='Low Stock Threshold'),
        ),
        migrations.AddField(
            model_name='product',
            name='meta_description',
            field=models.CharField(blank=True, help_text='SEO meta description', max_length=160, verbose_name='Meta Description'),
        ),
        migrations.AddField(
            model_name='product',
            name='meta_title',
            field=models.CharField(blank=True, help_text='SEO meta title (leave blank to use product name)', max_length=70, verbose_name='Meta Title'),
        ),
        migrations.AddField(
            model_name='product',
            name='published_at',
            field=models.DateTimeField(blank=True, help_text='When the product was first published', null=True, verbose_name='Published At'),
        ),
        migrations.AddField(
            model_name='product',
            name='requires_shipping',
            field=models.BooleanField(default=True, help_text='Whether this product requires shipping', verbose_name='Requires Shipping'),
        ),
        migrations.AddField(
            model_name='product',
            name='short_description',
            field=models.CharField(blank=True, help_text='Brief product summary for listings', max_length=300, verbose_name='Short Description'),
        ),
        migrations.AddField(
            model_name='product',
            name='sku',
            field=models.CharField(blank=True, help_text='Stock Keeping Unit - unique product identifier', max_length=50, unique=True, verbose_name='SKU'),
        ),
        migrations.AddField(
            model_name='product',
            name='slug',
            field=models.SlugField(blank=True, help_text='SEO-friendly URL slug (auto-generated from name)', max_length=220, unique=True, verbose_name='URL Slug'),
        ),
        migrations.AddField(
            model_name='product',
            name='status',
            field=models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('inactive', 'Inactive'), ('discontinued', 'Discontinued')], default='active', help_text='Product status', max_length=20, verbose_name='Status'),
        ),
        migrations.AddField(
            model_name='product',
            name='stock_quantity',
            field=models.PositiveIntegerField(default=0, help_text='Number of items in stock', verbose_name='Stock Quantity'),
        ),
        migrations.AddField(
            model_name='product',
            name='tags',
            field=models.CharField(blank=True, help_text='Comma-separated tags for search and filtering', max_length=500, verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='product',
            name='track_inventory',
            field=models.BooleanField(default=True, help_text='Whether to track inventory for this product', verbose_name='Track Inventory'),
        ),
        migrations.AddField(
            model_name='product',
            name='view_count',
            field=models.PositiveIntegerField(default=0, help_text='Number of times this product was viewed', verbose_name='View Count'),
        ),
        migrations.AddField(
            model_name='product',
            name='weight',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Product weight in kilograms', max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Weight (kg)'),
        ),
        migrations.AlterField(
            model_name='product',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Created At'),
        ),
        migrations.AlterField(
            model_name='product',
            name='name',
            field=models.CharField(help_text='The name of the product', max_length=200, verbose_name='Product Name'),
        ),
        migrations.AlterField(
            model_name='product',
            name='owner',
            field=models.ForeignKey(help_text='The user who owns this product', on_delete=django.db.models.deletion.CASCADE, related_name='products', to=settings.AUTH_USER_MODEL, verbose_name='Owner'),
        ),
        migrations.AlterField(
            model_name='product',
            name='price',
            field=models.DecimalField(decimal_places=2, help_text='Product price in the default currency', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Price'),
        ),
        migrations.AlterField(
            model_name='product',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Updated At'),
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the product category', max_length=100, unique=True, verbose_name='Category Name')),
                ('slug', models.SlugField(blank=True, help_text='SEO-friendly URL slug (auto-generated from name)', max_length=120, unique=True, verbose_name='URL Slug')),
                ('description', models.TextField(blank=True, help_text='Category description for SEO and user information', verbose_name='Description')),
                ('image', models.ImageField(blank=True, help_text='Category banner or icon image', null=True, upload_to='categories/', verbose_name='Category Image')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this category is active and visible', verbose_name='Active')),
                ('sort_order', models.PositiveIntegerField(default=0, help_text='Order for displaying categories', verbose_name='Sort Order')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, help_text='Parent category for hierarchical structure', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='products.category', verbose_name='Parent Category')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(blank=True, help_text='Product category', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='products.category', verbose_name='Category'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['status', 'is_featured'], name='products_pr_status_28f1d7_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['category', 'status'], name='products_pr_categor_75eeb5_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['slug'], name='products_pr_slug_3edc0c_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['sku'], name='products_pr_sku_ca0cdc_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['price'], name='products_pr_price_9b1a5f_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['stock_quantity'], name='products_pr_stock_q_ba97b5_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['view_count'], name='products_pr_view_co_64c090_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['created_at'], name='products_pr_created_52f0d7_idx'),
        ),
        migrations.AddField(
            model_name='productimage',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='products.product', verbose_name='Product'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['is_active', 'sort_order'], name='products_ca_is_acti_5dffbf_idx'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['slug'], name='products_ca_slug_da4386_idx'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['parent'], name='products_ca_parent__f3c24e_idx'),
        ),
        migrations.AddIndex(
            model_name='productimage',
            index=models.Index(fields=['product', 'is_active', 'sort_order'], name='products_pr_product_3e4e79_idx'),
        ),
    ]
